{"version":3,"sources":["components/sliders/index.tsx","components/filter-scene/state.ts","components/presets/index.tsx","utils/download.ts","components/filter-scene/index.tsx","containers/app/index.tsx","index.tsx"],"names":["Sliders","labels","values","handleChange","className","map","value","index","key","parseFloat","toFixed","type","min","max","step","onChange","e","target","FilterActions","NONE","filterInitialState","filter","applyFilter","colorOne","colorTwo","filtersReducer","state","action","newValues","payload","useFilters","useReducer","useFiltersReducer","dispatch","useCallback","apply","Presets","defaultValue","onPresetClick","onClick","download","imgURI","fileName","evt","MouseEvent","view","window","bubbles","cancelable","a","document","createElement","setAttribute","dispatchEvent","DEFAULT_IMAGE_KEY","Date","getTime","FilterScene","onControlChange","toggleFilters","setValues","setFirstColor","setSecondColor","setFilter","React","useState","imageKey","setImageKey","image","setImage","onDrop","files","FileReader","length","fr","onload","result","readAsDataURL","preset","undefined","onToggleFiltersClick","onDownloadClick","svg","querySelector","canvas","ctx","getContext","data","XMLSerializer","serializeToString","DOMURL","URL","webkitURL","img","Image","svgBlob","Blob","url","createObjectURL","drawImage","revokeObjectURL","toDataURL","replace","src","withIcon","buttonText","imgExtension","maxFileSize","label","style","height","App","xmlns","viewBox","fill","fillOpacity","d","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53f239f6.chunk.js","sourcesContent":["import React from 'react';\n\ntype SlidersProps = {\n  labels: string[];\n  values: any[];\n  handleChange(index: number, value: string);\n};\n\nconst Sliders: React.FC<SlidersProps> = ({ labels, values, handleChange }: SlidersProps) => (\n  <div className=\"Controls\">\n    {values.map((value, index) => (\n      <div className=\"Control\" key={index}>\n        {labels[index]}: {parseFloat(value).toFixed(2)}\n        <input\n          className=\"Control-input\"\n          type=\"range\"\n          min={-1}\n          max={2}\n          step={0.1}\n          value={value}\n          onChange={(e) => handleChange(index, e.target.value)}\n        />\n      </div>\n    ))}\n  </div>\n);\n\nexport default Sliders;\n","import { useReducer, useCallback } from 'react';\n\nexport const FilterActions = {\n  CONTROL_CHANGED: 'CONTROL_CHANGED',\n  SET_FILTER: 'SET_FILTER',\n  TOGGLE_FILTER: 'TOGGLE_FILTER',\n  SET_VALUES: 'SET_VALUES',\n  SET_FIRST_COLOR: 'SET_FIRST_COLOR',\n  SET_SECOND_COLOR: 'SET_SECOND_COLOR',\n} as const;\n\ntype FilterActionsType = typeof FilterActions;\ntype FilterActionsKey = keyof FilterActionsType;\n\ntype FilterValues = number[];\ntype Action = { type: FilterActionsKey; payload: any };\n\ntype FilterState = {\n  values: FilterValues;\n  filter: FilterValues | string;\n  applyFilter: boolean;\n  colorOne: FilterValues[];\n  colorTwo: FilterValues[];\n};\n\nexport const NONE: FilterValues = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n\nconst filterInitialState: FilterState = {\n  values: NONE,\n  filter: NONE,\n  applyFilter: true,\n  colorOne: null,\n  colorTwo: null,\n};\n\nfunction filtersReducer(state = filterInitialState, action: Action): FilterState {\n  switch (action.type) {\n    case 'CONTROL_CHANGED':\n      const newValues = [...state.values];\n      newValues[action.payload.index] = action.payload.value;\n\n      return {\n        ...state,\n        values: newValues,\n        filter: newValues,\n      };\n\n    case 'TOGGLE_FILTER':\n      return {\n        ...state,\n        applyFilter: action.payload,\n      };\n\n    case 'SET_VALUES':\n      return {\n        ...state,\n        values: action.payload,\n      };\n\n    case 'SET_FIRST_COLOR':\n      return {\n        ...state,\n        colorOne: action.payload,\n      };\n\n    case 'SET_SECOND_COLOR':\n      return {\n        ...state,\n        colorTwo: action.payload,\n      };\n\n    case 'SET_FILTER':\n      return {\n        ...state,\n        filter: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst useFiltersReducer = (): [FilterState, (action: Action) => void] => {\n  const [state, dispatch] = useReducer(filtersReducer, filterInitialState);\n\n  return [state, dispatch];\n};\n\ntype OnControlChangeFunc = (index: number, value: string) => void;\ntype ApplyFiltersFunc = (apply: boolean) => void;\ntype SetValuesFunc = (values: number[]) => void;\ntype SetFirstColorFunc = (values: number[]) => void;\ntype SetSecondColorFunc = (values: number[]) => void;\ntype SetFilterFunc = (filter: number[] | string) => void;\n\nconst useFilters = (): [\n  FilterState,\n  OnControlChangeFunc,\n  ApplyFiltersFunc,\n  SetValuesFunc,\n  SetFirstColorFunc,\n  SetSecondColorFunc,\n  SetFilterFunc,\n] => {\n  const [state, dispatch] = useFiltersReducer();\n\n  const onControlChange: OnControlChangeFunc = useCallback(\n    (index: number, value: string) => dispatch({ type: FilterActions.CONTROL_CHANGED, payload: { index, value } }),\n    [],\n  );\n\n  const applyFilters: ApplyFiltersFunc = useCallback(\n    (apply: boolean) => dispatch({ type: FilterActions.TOGGLE_FILTER, payload: apply }),\n    [],\n  );\n\n  const setValues: SetValuesFunc = useCallback(\n    (values: number[]) => dispatch({ type: FilterActions.SET_VALUES, payload: values }),\n    [],\n  );\n\n  const setFirstColor: SetFirstColorFunc = useCallback(\n    (values: number[]) => dispatch({ type: FilterActions.SET_FIRST_COLOR, payload: values }),\n    [],\n  );\n\n  const setSecondColor: SetSecondColorFunc = useCallback(\n    (values: number[]) => dispatch({ type: FilterActions.SET_SECOND_COLOR, payload: values }),\n    [],\n  );\n\n  const setFilter: SetFilterFunc = useCallback(\n    (filter: number[] | string) => dispatch({ type: FilterActions.SET_FILTER, payload: filter }),\n    [],\n  );\n\n  return [state, onControlChange, applyFilters, setValues, setFirstColor, setSecondColor, setFilter];\n};\n\nexport default useFilters;\n","import React from 'react';\n\ntype PresetsProps = {\n  defaultValue: number[];\n  onPresetClick: (\n    preset: Partial<{\n      filter: string | number[];\n      applyFilter: boolean;\n      values: number[];\n      colorOne: number[];\n      colorTwo: number[];\n    }>,\n  ) => void;\n};\n\nconst Presets: React.FC<PresetsProps> = ({ defaultValue, onPresetClick }: PresetsProps) => {\n  return (\n    <div>\n      <div>\n        <h4>Пресеты</h4>\n        <button\n          className=\"btn btn-sm\"\n          onClick={() => onPresetClick({ filter: defaultValue, values: defaultValue, applyFilter: true })}\n        >\n          Не выбрано\n        </button>\n        <button className=\"btn btn-sm\" onClick={() => onPresetClick({ filter: 'invert', applyFilter: true })}>\n          Инвертировать\n        </button>\n        <button className=\"btn btn-sm\" onClick={() => onPresetClick({ filter: 'grayscale', applyFilter: true })}>\n          Оттенки серого\n        </button>\n        <button className=\"btn btn-sm\" onClick={() => onPresetClick({ filter: 'sepia', applyFilter: true })}>\n          Сепия\n        </button>\n        <button\n          className=\"btn btn-sm\"\n          onClick={() =>\n            onPresetClick({\n              applyFilter: true,\n              filter: 'duotone',\n              colorOne: [250, 50, 50],\n              colorTwo: [20, 20, 100],\n            })\n          }\n        >\n          Дуотон (красно-синий)\n        </button>\n        <button\n          className=\"btn btn-sm\"\n          onClick={() =>\n            onPresetClick({\n              applyFilter: true,\n              filter: 'duotone',\n              colorOne: [50, 250, 50],\n              colorTwo: [250, 20, 220],\n            })\n          }\n        >\n          Дуотон (Зелено-фиолетовый)\n        </button>\n        <button\n          className=\"btn btn-sm\"\n          onClick={() =>\n            onPresetClick({\n              applyFilter: true,\n              filter: 'duotone',\n              colorOne: [40, 250, 250],\n              colorTwo: [250, 150, 30],\n            })\n          }\n        >\n          Дуотон (Сине-оранжевый)\n        </button>\n        <button\n          className=\"btn btn-sm\"\n          onClick={() =>\n            onPresetClick({\n              filter: 'duotone',\n              colorOne: [40, 70, 200],\n              colorTwo: [220, 30, 70],\n            })\n          }\n        >\n          Дуотон (Сине-красный)\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Presets;\n","function download(imgURI: string, fileName = 'filtred_image'): void {\n  const evt = new MouseEvent('click', {\n    view: window,\n    bubbles: false,\n    cancelable: true,\n  });\n\n  const a = document.createElement('a');\n  a.setAttribute('download', `${fileName}.png`);\n  a.setAttribute('href', imgURI);\n  a.setAttribute('target', '_blank');\n\n  a.dispatchEvent(evt);\n}\n\nexport default download;\n","import React from 'react';\n\nimport './style.scss';\n\nimport ImageFilter from 'react-image-filter';\nimport ImageUploader from 'react-images-upload';\n\nimport Sliders from '../sliders';\nimport useFilters, { NONE } from './state';\nimport Presets from '../presets';\nimport download from '../../utils/download';\n\nconst DEFAULT_IMAGE_KEY = new Date().getTime();\n\nconst labels = [\n  'Red to Red',\n  'Green to Red',\n  'Blue to Red',\n  'Alpha to Red',\n  'Add to Red',\n  'Red to Green',\n  'Green to Green',\n  'Blue to Green',\n  'Alpha to Green',\n  'Add to Green',\n  'Red to Blue',\n  'Green to Blue',\n  'Blue to Blue',\n  'Alpha to Blue',\n  'Add to Blue',\n  'Red to Alpha',\n  'Green to Alpha',\n  'Blue to Alpha',\n  'Alpha to Alpha',\n  'Add to Alpha',\n];\n\nconst FilterScene: React.FC = () => {\n  const [\n    { applyFilter, colorOne, colorTwo, filter, values },\n    onControlChange,\n    toggleFilters,\n    setValues,\n    setFirstColor,\n    setSecondColor,\n    setFilter,\n  ] = useFilters();\n\n  const [imageKey, setImageKey] = React.useState<number>(DEFAULT_IMAGE_KEY);\n  const [image, setImage] = React.useState<string>('');\n\n  const onDrop = React.useCallback(\n    (files: File[]) => {\n      if (FileReader && files && files.length) {\n        const fr = new FileReader();\n        fr.onload = () => {\n          setImage(fr.result as string);\n          setImageKey(new Date().getTime());\n        };\n\n        fr.readAsDataURL(files[0]);\n      }\n    },\n    [setImage, setImageKey],\n  );\n\n  const onPresetClick = React.useCallback(\n    (\n      preset: Partial<{\n        filter: string | number[];\n        applyFilter: boolean;\n        values: number[];\n        colorOne: number[];\n        colorTwo: number[];\n      }>,\n    ): void => {\n      if (preset.applyFilter !== undefined) {\n        toggleFilters(preset.applyFilter);\n      }\n\n      if (preset.colorOne) {\n        setFirstColor(preset.colorOne);\n      }\n\n      if (preset.colorTwo) {\n        setSecondColor(preset.colorTwo);\n      }\n\n      if (preset.values) {\n        setValues(preset.values);\n      }\n\n      if (preset.filter) {\n        setFilter(preset.filter);\n      }\n    },\n    [toggleFilters, setFirstColor, setSecondColor, setValues, setFilter],\n  );\n\n  const onToggleFiltersClick = React.useCallback(() => toggleFilters(!applyFilter), [toggleFilters, applyFilter]);\n\n  const onDownloadClick = React.useCallback(() => {\n    const svg = document.querySelector('.ImageFilter-svg');\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const data = new XMLSerializer().serializeToString(svg);\n    const DOMURL: any = window.URL || window.webkitURL || window;\n\n    const img = new Image();\n    const svgBlob = new Blob([data], { type: 'image/svg+xml;charset=utf-8' });\n    const url = DOMURL.createObjectURL(svgBlob);\n\n    img.onload = function () {\n      ctx.drawImage(img, 0, 0);\n      DOMURL.revokeObjectURL(url);\n\n      const imgURI = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n\n      download(imgURI);\n    };\n\n    img.src = url;\n  }, []);\n\n  return (\n    <div className=\"Content\">\n      {!image && (\n        <ImageUploader\n          withIcon={true}\n          buttonText=\"Выберите изображение\"\n          onChange={onDrop}\n          imgExtension={['.jpg', '.png']}\n          maxFileSize={5242880}\n          label=\"Выберите или перенесите на эту область изображение\"\n        />\n      )}\n\n      {image && (\n        <>\n          <div className=\"ImageWrapper\">\n            <ImageFilter\n              image={image}\n              key={imageKey}\n              // preserveAspectRatio='cover'\n              // style={ { width: '100%', height: 300 } }\n              filter={applyFilter ? filter : NONE}\n              colorOne={colorOne}\n              colorTwo={colorTwo}\n              onChange={setValues}\n            />\n          </div>\n\n          <Sliders labels={labels} values={values} handleChange={onControlChange} />\n\n          <Presets defaultValue={NONE} onPresetClick={onPresetClick} />\n\n          <h4>Разное</h4>\n\n          <button className=\"btn btn-sm\" onClick={onToggleFiltersClick}>\n            Фильтры {applyFilter ? 'Выключить' : 'Включить'}\n          </button>\n\n          <button className=\"btn btn-sm\" onClick={onDownloadClick}>\n            Скачать\n          </button>\n        </>\n      )}\n      {!image && <div style={{ height: '356px' }} />}\n    </div>\n  );\n};\n\nexport default FilterScene;\n","import React from 'react';\n\nimport './styles.scss';\n\nimport FilterScene from '../../components/filter-scene';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app-container\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"app_decoration__header\">\n        <path\n          fill=\"#086972\"\n          fillOpacity=\"0.3\"\n          d=\"M0,128L48,122.7C96,117,192,107,288,112C384,117,480,139,576,128C672,117,768,75,864,53.3C960,32,1056,32,1152,58.7C1248,85,1344,139,1392,165.3L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n        ></path>\n      </svg>\n\n      <div className=\"app-body\">\n        <FilterScene />\n      </div>\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"app_decoration__footer\">\n        <path\n          fill=\"#086972\"\n          fillOpacity=\"0.3\"\n          d=\"M0,160L48,138.7C96,117,192,75,288,85.3C384,96,480,160,576,186.7C672,213,768,203,864,218.7C960,235,1056,277,1152,266.7C1248,256,1344,192,1392,160L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './containers/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}